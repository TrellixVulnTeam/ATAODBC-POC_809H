# This is a basic workflow to help you get started with Actions

name: snowflake_linux

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2
        - name: setup php
          uses: shivammathur/setup-php@v2
          with:
            php-version: 7.2
            extensions: pdo, json
          
          
        - name: get source
          run: git clone https://github.com/snowflakedb/pdo_snowflake.git
        
     
        #- name: setup tools
        #  run: |
        #    sudo apt-get install valgrind
          
          
        - name: check env
          run: |
            which jq
            ls /etc/php/7.2/fpm          
            /usr/bin/php -i | grep '^extension_dir'
            ls /usr/lib/php/20170718/
            pwd
            ls
            
          
        - name: build driver
          env: 
            SNOWFLAKE_TEST_USER: ${{ secrets.SNOWFLAKE_TEST_USER }}
            SNOWFLAKE_TEST_PASSWORD: ${{ secrets.SNOWFLAKE_TEST_PASSWORD }}
            SNOWFLAKE_TEST_ACCOUNT: ${{ secrets.SNOWFLAKE_TEST_ACCOUNT }}
            SNOWFLAKE_TEST_WAREHOUSE: ${{ secrets.SNOWFLAKE_TEST_WAREHOUSE }}
            SNOWFLAKE_TEST_DATABASE: ${{ secrets.SNOWFLAKE_TEST_DATABASE }}
            SNOWFLAKE_TEST_SCHEMA: ${{ secrets.SNOWFLAKE_TEST_SCHEMA }}
            SNOWFLAKE_TEST_ROLE: ${{ secrets.SNOWFLAKE_TEST_ROLE }}
          run: |
            export RUN_COVERAGE=1
            export PHP_HOME=/usr
            ./scripts/build_pdo_snowflake.sh
            $PHP_HOME/bin/php -dextension=modules/pdo_snowflake.so -m | grep pdo_snowflake
            cp ../config/parameters.json ./
            cp ../scripts/bind_named_parameters.phpt ./tests
            python ../scripts/set_secrets.py ./parameters.json
            ./scripts/env.sh && env | grep SNOWFLAKE_TEST > testenv.ini
            $PHP_HOME/bin/php -m
            REPORT_EXIT_STATUS=1 NO_INTERACTION=true make test || :
            cat ./tests/bind_named_parameters.out
            ls
            cat Makefile
          working-directory: /home/runner/work/ATA-POC-ODBC/ATA-POC-ODBC/pdo_snowflake
          
          
        #- name: setup driver
        #  run: |
        #    export PHP_HOME=/usr
        #    sudo cp -f ./modules/pdo_snowflake.so /usr/lib/php/20170718/
        #    sudo cp -f ./libsnowflakeclient/cacert.pem /etc/php/7.2/fpm/
        #    sudo cp -f ../config/20-pdo_snowflake.ini /etc/php/7.2/fpm/
        #    ls /usr/lib/php/20170718/
        #    ls /etc/php/7.2/fpm/
        #    ldd /usr/lib/php/20170718/pdo_snowflake.so
        #    $PHP_HOME/bin/php -dextension=pdo_snowflake.so -m
        #    cat /etc/php/7.2/fpm/php.ini
        #  working-directory: /home/runner/work/ATA-POC-ODBC/ATA-POC-ODBC/pdo_snowflake
         
