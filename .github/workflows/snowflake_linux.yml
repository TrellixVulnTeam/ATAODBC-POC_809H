# This is a basic workflow to help you get started with Actions

name: snowflake_linux

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2
        - name: setup php
          uses: shivammathur/setup-php@v2
          with:
            php-version: 7.2
            extensions: pdo, json
          
          
        - name: get source
          run: git clone https://github.com/snowflakedb/pdo_snowflake.git
        
        
        - name: check env
          run: |
            ls /etc/php/7.2/fpm          
            /usr/bin/php -i | grep '^extension_dir'
            ls /usr/lib/php/20170718/
            pwd
            ls
            
          
        - name: build driver
          run: |
            export RUN_COVERAGE=1
            export PHP_HOME=/usr
            ./scripts/build_pdo_snowflake.sh
            $PHP_HOME/bin/php -dextension=modules/pdo_snowflake.so -m | grep pdo_snowflake
          working-directory: /home/runner/work/ATA-POC-ODBC/ATA-POC-ODBC/pdo_snowflake
          
          
        - name: setup driver
          run: |
            sudo cp -f ./modules/pdo_snowflake.so /usr/lib/php/20170718/
            sudo cp -f ./libsnowflakeclient/cacert.pem /etc/php/7.2/fpm/
            sudo cp -f ../config/20-pdo_snowflake.ini /etc/php/7.2/fpm/
            ls /usr/lib/php/20170718/
            ls /etc/php/7.2/fpm/
            cp ../config/parameters.json ./
            python ../scripts/set_secrets.py ./parameters.json
          working-directory: /home/runner/work/ATA-POC-ODBC/ATA-POC-ODBC/pdo_snowflake
        
        
        - name: run test
          run: |
            ./scripts/env.sh && env | grep SNOWFLAKE_TEST > testenv.ini
            REPORT_EXIT_STATUS=1 NO_INTERACTION=true make test
          working-directory: /home/runner/work/ATA-POC-ODBC/ATA-POC-ODBC/pdo_snowflake
         
